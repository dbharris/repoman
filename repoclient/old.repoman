#!/usr/bin/env python
'''
Created on Sep 17, 2010

@author: fransham
'''
import getopt
import pwd
import sys
import os
import getpass
from repoclient import repoclient


repo = "localhost"
    
def usage():
    print "\n"
    print "Repoman Client Usage:"
    print "Possible options: --help --debug --list --getuser --all --save --new_image --name [name] --description [description] --os_variant [OS variant] --os_arch [OS architecture] --os_type [OS type] --hypervisor [hypervisor] --read_only --repo [reponame] --get_image_info"
    print "Default repository, certificate/key and image settings can be found in /etc/repoclient/repoclient.conf"
    print "\n"
    print "Example usage:"
    print "repoman --getuser (returns current user information)" 
    print "repoman --getuser all (lists all user information)"
    print "repoman --list (lists images owned by current user)"
    print "repoman --list --all (lists all images on repository)"
    print "repoman --new_image --name image_name [--description] [--os_variant] [--os_arch] [--os_type] [--hypervisor] [--read_only] (creates new image metadata on the server)"
    print "repoman --save --name (save current installation to an already-created image on the server)"
    print "repoman --upload --file image_file_name --name image_name(upload image file to an already-created image on the server)"
    print "repoman --get_image_info --name image_name (returns image metadata)"
    print "\n"
    
def ask_yes_or_no():
    print " Are you sure you want to continue?"
    k=raw_input("[y/N]")
    if k in ('y', 'ye', 'yes'):
        return True
    return False

def main(argv):
    try:
        opts, args = getopt.getopt(argv, "hd",
                                   ["help",
                                    "debug",
                                    "list",
                                    "getuser",
                                    "all",
                                    "save",
                                    "new_image",
                                    "get_image_info",
                                    "upload",
                                    "file=",
                                    "name=",
                                    "description=",
                                    "os_variant=",
                                    "os_arch=",
                                    "os_type=",
                                    "hypervisor=",
                                    "read_only",
                                    "repo="
                                    ])
        
    except getopt.GetoptError:
        usage()
        sys.exit(2)
                           
    list = False
    getuser = False
    all=False
    new_image = False
    save = False
    username = pwd.getpwuid(os.getuid()).pw_name
    name = ""
    description = ""
    os_variant = ""
    os_arch = ""
    os_type = ""
    hypervisor = ""
    read_only = False
    newname = ""
    get_image_info = False
    upload = False
    file = ""
    
    repo = repoclient.repoclient()
    
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
        elif opt == ("-d", "--debug"):
            global _debug
            _debug = 1
        elif opt in ("--list"):
            list = True
        elif opt in ("--getuser"):
            getuser = True
        elif opt in ("--save"):
            save = True
        elif opt in ("--new_image"):
            new_image = True
        elif opt in ("--get_image_info"):
            get_image_info = True
        elif opt in ("--upload"):
            upload = True
        elif opt in ("--name"):
            name = arg
        elif opt in ("--file"):
            file = arg
        elif opt in ("--description"):
            description = arg
        elif opt in ("--os_variant"):
            os_variant = arg
        elif opt in ("--os_arch"):
            os_arch = arg
        elif opt in ("--os_type"):
            os_type = arg
        elif opt in ("--hypervisor"):
            hypervisor = arg
        elif opt in ("--read_only"):
            read_only = True
        elif opt in ("--repo"):
            repo = arg
        elif opt in ("--all"):
            all = True
    
    #make sure only one command line argument is specified:
    if( list + getuser + save + new_image + get_image_info + upload != 1):
        usage()
        sys.exit(2)
      

    if list:
        if all:
            repo.list_all_images()
        else:
            repo.list_images()
        sys.exit(0)
        
    if getuser:
        if all:
            repo.list_users()
        else:
            repo.get_user()
        sys.exit(0)

    if new_image:
        if not name:
            print "Creating a new image requires at least a name."
            print "Please specify a name with --new_image --name *name*"
            sys.exit(2)
        else:
            print "Creating image with arguements:"
            print "Name:" + name
            print "Description: " + description
            print "OS Variant: " + os_variant
            print "OS Architecture: " + os_arch
            print "OS Type: " + os_type
            print "Hypervisor: " + hypervisor
            print "Read Only: " + str(read_only)
            metadata = [name, description, os_variant, os_arch, os_type, hypervisor, read_only]
            repo.new_image(metadata)
            sys.exit(0)


    if get_image_info:
        if not name:
            print "Please specify the name of the image you would like information about."
            print "Example: repoman --get_image_info --name MyImage"
            sys.exit(2)
        else:
            repo.get_image_info(name)
            sys.exit(0)

    if upload:
        if not name and file:
            print "Uploading an image requires both the name of the image from previously-uploaded metadata and the file to upload:"
            print "Example:  repoman --upload --name my_image --file /opt/images/my_image.img.gz"   
            sys.exit(2)
        else:
            print "Uploading..."
            repo.upload_image(name, file)

    if save:
        if not name:
            print '''
    Please specify an image name with the --name flag.
    The images available to you are:
            '''
            repo.list_images()
            print '''
    select one of these images to overwrite, or specify a new image name
    see --help for more details
            '''
            sys.exit(2)
        repo.save_image(name)
        sys.exit(0) 
        
        
if __name__ == "__main__":
    main(sys.argv[1:])
