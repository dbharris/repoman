#!/usr/bin/env python
import sys
import optparse
import os
from repoclient import repoclient

repo = repoclient.repoclient()

parser = optparse.OptionParser()

def ask_yes_or_no():
    print " Are you sure you want to continue?"
    k=raw_input("[y/N]")
    if k in ('y', 'ye', 'yes'):
        return True
    return False


def main():
    if not len(sys.argv) > 1:
        print "\n"
        print "Repoman Client"
        print "Currently implemented commands:"
        print "repoman list [--all]"
        print "repoman getuser [--all]"
        print "repoman info [--name] "
        print "repoman save [--name] [--(another other metadata tags)]"
        print "\n"
        print "All defaults are set in repoclient.conf, set in /etc/repoclient/repoclient.conf by default"
        print "\n"
        sys.exit(0)
    else:
        command = sys.argv[1]
        # args = sys.argv[1:]

    if command == 'list':
        parser.add_option('-l','--long',dest='long',default=False)
        parser.add_option('-a','--all',dest="all",default=False,action="store_true")
        options, args = parser.parse_args(args=sys.argv[2:])
        if options.all:
            repo.list_all_images()
        else:
            repo.list_images()
        sys.exit(0)

    if command == 'save':
        # parser.add_option('-n','--name',action="store", type="string",dest="name")
        # parser.add_option('-m','--metadata',dest="metadata",default=False,action="store_true")
        # options, args = parser.parse_args(args=sys.argv[2:])
        args = sys.argv
        metadata = dict([(args[i].strip('-'), args[i+1]) for i in range(2, len(args) - 1, 2)])
        image_list = repo.list_images_raw()
        for i in xrange(len(repo.list_images_raw())):
            image_list[i] = repo.list_images_raw()[i].split('/')[6]

        try:
            # Try to get the name from command line arguements
            name = metadata['name']

        except:
            # If the name has NOT been specified 
            print '''    Please either specify an image name with the --name flag
        or specify metadata with --metadata --name [name] --os_type [os_type] etc..
        The images available to you are:
                  ''' 
            for item in image_list:
                print item
            print '''
        select one of these images to overwrite, or specify a new image name
        see --help for more details
                  '''
            sys.exit(2)
        replace=False
        for item in image_list:
            if item == name:
                replace=True
                print 'WARNING!! This image already exists on the repository.'
                if not ask_yes_or_no():
                    print 'Exiting repoclient.'
                    sys.exit(2)
        print "Saving image "+name+" with the following metadata:"
        for key in metadata:
            print key+": "+metadata[key]
        repo.save_image(metadata=metadata,replace=replace)
        # sends to repoclient as kwargs


    if command == 'getuser':
        parser.add_option('-a','--all',dest="all",default=False,action="store_true")
        options, args = parser.parse_args(args=sys.argv[2:])
        if options.all:
            repo.list_users()
            sys.exit(0)
        else:
            repo.get_user()
        sys.exit(0)

    if command == 'info':
        image_list = repo.list_images_raw()
        for i in xrange(len(repo.list_images_raw())):
            image_list[i] = repo.list_images_raw()[i].split('/')[6]

        parser.add_option('-n','--name',action="store",type="string",dest="name")
        options, args = parser.parse_args(args=sys.argv[2:])
        if options.name:
            repo.get_image_info(options.name)
            sys.exit(0)           
        else:
            print "Please run this command as get_image_info --name image_name, where image_name is one of the following:"
            for item in image_list:
                print item
            sys.exit(2)
            

if __name__ == "__main__":
    main() 
