#!/usr/bin/env python

import ConfigParser
from repoclient import imageutils
import sys,os
from commands import getstatusoutput
#write help


class reposync(object):

    def __init__(self):
        self.get_options()
        self.read_config_file()
        self.iut = imageutils.imageutils()
    
    def get_options(self):
        print "options coming soon"

        
    def read_config_file(self):
        
        config = ConfigParser.RawConfigParser()
        config.read("/etc/repoclient/repoclient.conf")

        # read in some values that MUST be set:
        try:
            self.imagepath=config.get("ThisImage","image")
            self.mountpoint=config.get("ThisImage","mountpoint")
        except ConfigParser.NoSectionError:
            print "Trouble reading config file. (/etc/repoclient/repoclient.conf"  
            print "Make sure a mountpoint and image file are specified"
            sys.exit(1)
    
        try:
            self.imagename=config.get("ThisImage","image")
            self.repository=config.get("ThisImage","repository")
        except ConfigParser.NoSectionError:
            print "Trouble reading config file. (/etc/repoclient/repoclient.conf"  
            print "Make sure an imagename and repository are specified"
            sys.exit(1)
            
        try:
            self.usercert=config.get("ThisImage","usercert")
            self.userkey=config.get("ThisImage","userkey")
        except ConfigParser.NoSectionError:
            print "Trouble reading config file. (/etc/repoclient/repoclient.conf"  
            print "Make sure a usercert and userkey are specified"
            sys.exit(1)
        
        #these values are optional, and are set if they don't exist
        try:
            self.lockfile=config.get("ThisImage","lockfile")
        except ConfigParser.NoOptionError:
            self.lockfile="/var/lock/reposync.pid"
    
        try:
            self.sync_onboot=config.getboolean("ThisImage","sync_onboot")
        except ConfigParser.Error:
            self.sync_onboot = True
        
        try:
            self.excl_dirs=config.get("ThisImage","exclude_dirs") + self.mountpoint
        except ConfigParser.NoOptionError:
            self.excl_dirs = self.mountpoint
                       
    
    def create_image(self):        
        self.iut.create_image(self.imagepath)
        self.iut.mount_image(self.imagepath,self.mountpoint)
        if not self.iut.check_mounted(self.imagepath,self.mountpoint):
            print "File is not mounted.  Check that you have the proper permissions to run this command"
            sys.exit(1)
        
    
    def sync_is_running(self):
        if os.path.exists(self.lockfile):
            return True
        return False
    
    def create_local_bundle(self):
        if self.sync_is_running():
            pid=open(self.lockfile,'r').read()
            print "The local image creation is already in progress... speeding it up"
            print "This can take some time... please wait."
            print "If you're sure this is an error, cancel this script and delete: "
            print "  "+self.lockfile
            os.system("renice -19 "+pid);
            os.waitpid(int(pid),0)
            print "Local image copy created"
        else:
            pid = os.getpid()
            lf = open(self.lockfile,'w')
            lf.write(str(pid))
            lf.close()
            try:
                self.create_image()
                self.iut.sync_filesystem(self.mountpoint, self.excl_dirs)
                os.remove(self.lockfile)
            except imageutils.MountError,e:
                print e.msg
                os.remove(self.lockfile)
                sys.exit(1)
    
    
if __name__ == "__main__":
    print "copying image"
    repo = reposync()
    repo.create_local_bundle()
            

